/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Option } from "./components/scandash-dropdown/types";
export namespace Components {
    interface ScandashDropdown {
        /**
          * In pixels, the size of the font used in the dropdown.
          * @default 16
         */
        "fontSize"?: number;
        /**
          * In pixels, the height of each item. Default `40` is 2.5rem.
          * @default 48
         */
        "itemSize"?: number;
        /**
          * A list of options to be displayed in the dropdown. May be passed as a JSON `string` or an array of `Option` objects.
         */
        "options": string | Option[];
        /**
          * The placeholder text to be displayed when no option is selected.
         */
        "placeholder"?: string;
        /**
          * Publically exposed method, which when called, resets the `selectedOption` to its default value, given the `option` prop or attribute configuration.
         */
        "reset": () => Promise<void>;
    }
}
export interface ScandashDropdownCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLScandashDropdownElement;
}
declare global {
    interface HTMLScandashDropdownElement extends Components.ScandashDropdown, HTMLStencilElement {
    }
    var HTMLScandashDropdownElement: {
        prototype: HTMLScandashDropdownElement;
        new (): HTMLScandashDropdownElement;
    };
    interface HTMLElementTagNameMap {
        "scandash-dropdown": HTMLScandashDropdownElement;
    }
}
declare namespace LocalJSX {
    interface ScandashDropdown {
        /**
          * In pixels, the size of the font used in the dropdown.
          * @default 16
         */
        "fontSize"?: number;
        /**
          * In pixels, the height of each item. Default `40` is 2.5rem.
          * @default 48
         */
        "itemSize"?: number;
        "onOnOptionChange"?: (event: ScandashDropdownCustomEvent<Option>) => void;
        /**
          * A list of options to be displayed in the dropdown. May be passed as a JSON `string` or an array of `Option` objects.
         */
        "options": string | Option[];
        /**
          * The placeholder text to be displayed when no option is selected.
         */
        "placeholder"?: string;
    }
    interface IntrinsicElements {
        "scandash-dropdown": ScandashDropdown;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "scandash-dropdown": LocalJSX.ScandashDropdown & JSXBase.HTMLAttributes<HTMLScandashDropdownElement>;
        }
    }
}
